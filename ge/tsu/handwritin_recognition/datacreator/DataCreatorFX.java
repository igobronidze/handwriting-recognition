package ge.tsu.handwritin_recognition.datacreator;import ge.tsu.systemsetting.SystemParameter;import javafx.application.Application;import javafx.geometry.Insets;import javafx.geometry.Pos;import javafx.scene.Scene;import javafx.scene.control.Button;import javafx.scene.control.ComboBox;import javafx.scene.control.Label;import javafx.scene.control.TextField;import javafx.scene.layout.BorderPane;import javafx.scene.layout.GridPane;import javafx.scene.layout.HBox;import javafx.stage.Stage;import java.io.File;public class DataCreatorFX extends Application {    private BorderPane root;    private HBox topPane;    private HBox bottomPane;    private GridPane centerPane;    private TextField widthField;    private TextField heightField;    private ComboBox<String> dataSetsCombo;    private Button[][] buttonMatrix = new Button[SystemParameter.testDataCreatorGridMaxWidth][SystemParameter.testDataCreatorGridMaxHeight];    public static void main(String[] args) {        launch(args);    }    @Override    public void start(Stage primaryStage) {        primaryStage.setTitle("Create test data");        root = new BorderPane();        initTopPane();        initBottomPane();        reloadCenterPane(SystemParameter.testDataCreatorGridDefaultWidth, SystemParameter.testDataCreatorGridDefaultHeight);        primaryStage.setScene(new Scene(root, SystemParameter.testDataCreatorWindowWidth, SystemParameter.testDataCreatorWindowHeight));        primaryStage.show();    }    private void reloadCenterPane(int width, int height) {        centerPane = new GridPane();        centerPane.setAlignment(Pos.CENTER);        for (int i = 0; i < height; i++) {            for (int j = 0; j < width; j++) {                Button btn = new Button();                buttonMatrix[i][j] = btn;                centerPane.add(btn, i, j);            }        }        root.setCenter(centerPane);    }    private void initBottomPane() {        bottomPane = new HBox();        bottomPane.setAlignment(Pos.CENTER);        bottomPane.setPadding(new Insets(0, 0, 10, 0));        bottomPane.setSpacing(10);        Label answerLabel = new Label("answer:");        TextField answerField = new TextField();        Label dataSetLabel = new Label("directory:");        dataSetsCombo = new ComboBox<>();        dataSetsCombo.setPrefWidth(130);        Button saveButton = new Button("save");        bottomPane.getChildren().addAll(answerLabel, answerField);        bottomPane.getChildren().addAll(dataSetLabel, dataSetsCombo, saveButton);        root.setBottom(bottomPane);    }    private void initTopPane() {        topPane = new HBox();        topPane.setAlignment(Pos.CENTER);        topPane.setSpacing(10);        topPane.setPadding(new Insets(10, 0, 0, 0));        Label widthLabel = new Label("width:");        widthField = new TextField();        widthField.setText(Integer.toString(SystemParameter.testDataCreatorGridDefaultWidth));        topPane.getChildren().addAll(widthLabel, widthField);        Label heightLabel = new Label("height:");        heightField = new TextField();        heightField.setText(Integer.toString(SystemParameter.testDataCreatorGridDefaultHeight));        topPane.getChildren().addAll(heightLabel, heightField);        Button chooseButton = new Button("create");        topPane.getChildren().add(chooseButton);        root.setTop(topPane);    }}